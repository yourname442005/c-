#include <iostream>
#include <vector>
#include <string>
using namespace std;

class ShoppingList {
private:
    vector<string> items;

public:
    void addItem(const string& item) {
        items.push_back(item);
        cout << "Item \"" << item << "\" added to the shopping list." << endl;
    }

    void displayList() const {
        if (items.empty()) {
            cout << "The shopping list is empty." << endl;
        } else {
            cout << "Shopping List:" << endl;
            for (size_t i = 0; i < items.size(); i++) {
                cout << i + 1 << ". " << items[i] << endl;
            }
        }
    }

    void removeItem(int index) {
        if (index < 1 || index > items.size()) {
            cout << "Invalid item number!" << endl;
        } else {
            cout << "Item \"" << items[index - 1] << "\" removed from the shopping list." << endl;
            items.erase(items.begin() + index - 1);
        }
    }

    void clearList() {
        items.clear();
        cout << "All items have been removed from the shopping list." << endl;
    }
};

int main() {
    ShoppingList shoppingList;
    int choice;
    string item;
    int index;

    do {
        cout << "\n--- Shopping List Menu ---" << endl;
        cout << "1. Add Item" << endl;
        cout << "2. Display List" << endl;
        cout << "3. Remove Item" << endl;
        cout << "4. Clear List" << endl;
        cout << "5. Exit" << endl;
        cout << "Enter your choice: ";
        cin >> choice;
        cin.ignore(); // Ignore the newline character after the choice input

        switch (choice) {
            case 1:
                cout << "Enter the item to add: ";
                getline(cin, item);
                shoppingList.addItem(item);
                break;
            case 2:
                shoppingList.displayList();
                break;
            case 3:
                cout << "Enter the item number to remove: ";
                cin >> index;
                shoppingList.removeItem(index);
                break;
            case 4:
                shoppingList.clearList();
                break;
            case 5:
                cout << "Exiting the shopping list program. Goodbye!" << endl;
                break;
            default:
                cout << "Invalid choice. Please try again." << endl;
        }
    } while (choice != 5);

    return 0;
}
